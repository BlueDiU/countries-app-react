{"version":3,"sources":["helpers/helpHttp.js","context/types.js","context/actions/country.js","helpers/ApiUrl.js","assets/img/loader.svg","components/utils/Loader.jsx","helpers/populationFormat.js","components/CountryCard/cardInfor/CardInfo.jsx","components/CountryCard/cardImg/CardImg.jsx","components/CountryCard/CountryCard.styles.js","components/CountryCard/CountryCard.jsx","components/CountryList/CountryList.jsx","assets/img/darkMode.svg","assets/img/lightMode.svg","components/header/Header.styles.js","components/header/Header.jsx","hooks/useForm.js","components/searchForm/SearchForm.styles.js","components/searchForm/SearchForm.jsx","components/selectForm/SelectForm.styles.js","components/selectForm/SelectForm.jsx","components/utils/scrollTop/ScrollTop.styles.js","components/utils/scrollTop/ScrollTop.jsx","components/section/Section.jsx","components/Main.jsx","components/CountryDetails/CountryDetails.styles.js","components/utils/BackBtn.jsx","components/CountryDetails/detailsImg/DetailsImg.jsx","components/CountryDetails/DetailsInfo.jsx","components/CountryDetails/groups/DetailsGroupBorders.jsx","components/CountryDetails/groups/DetailsGroupOne.jsx","components/CountryDetails/groups/DetailsGroupTwo.jsx","components/CountryDetails/CountryDetails.jsx","router/AppRouter.jsx","context/reducers/countryReducer.js","context/reducers/rootReducer.js","context/store.js","App.styles.js","App.js","reportWebVitals.js","index.js"],"names":["helpHttp","customFetch","endpoint","options","defaultHeader","accept","controller","AbortController","signal","method","headers","body","JSON","stringify","setTimeout","abort","fetch","then","res","ok","json","Promise","reject","err","status","statusText","catch","get","url","post","put","del","types","GET_ALL_COUNTRIES","GET_COUNTRY_BY_NAME","GET_COUNTRIES_BY_REGION","GET_COUNTRY_BY_CODE","startGetAllCountries","dispatch","a","countryGetAll","console","error","data","type","payload","countryGetByName","countryGetByCode","countryGetByRegion","Loader","src","loaderImg","alt","style","margin","display","width","height","populationFormat","x","toString","replace","CardInfo","population","region","capital","className","CardImg","flag","name","handleViewDetails","loading","onClick","CountryCardStyled","styled","div","props","theme","cardColor","fontColor","CountryCard","callingCodes","history","useHistory","push","CountryListStyled","CountryList","useDispatch","countries","useSelector","state","countriesData","useEffect","textAlign","fontSize","map","country","HeaderStyled","Header","setTheme","icon","lightModeImg","DarkModeImg","mode","localStorage","setItem","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","SearchFormStyled","SearchForm","search","onSubmit","e","preventDefault","log","placeholder","autoComplete","onChange","SelectFormStyled","SelectForm","regions","ScrollTopStyled","ScrollTop","y","useWindowScroll","visible","setVisible","window","scrollTo","top","behavior","MainSection","section","Section","MainContainer","main","Main","CountryDetailsStyled","BackBtnStyled","BackBtn","handleCleanData","goBack","DetailsImg","DetailsInfo","children","DetailsGroupBorders","borders","length","DetailsGroupOne","nativeName","subregion","DetailsGroupTwo","topLevelDomain","currencies","languages","code","CountryDetails","details","pathname","useLocation","slice","startGetCountryByCode","AppRouter","exact","path","component","to","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","mainColor","lsTheme","getItem","themes","light","dark","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43729274.chunk.js","sourcesContent":["export const helpHttp = () => {\r\n  const customFetch = (endpoint, options) => {\r\n    const defaultHeader = {\r\n      accept: 'application/json',\r\n    };\r\n\r\n    /* Will let cancel a fetch petitions if server not response */\r\n    const controller = new AbortController();\r\n    options.signal = controller.signal;\r\n\r\n    /* Verify if the options method, and add to defaultHeader*/\r\n    options.method = options.method || 'GET';\r\n    options.headers = options.headers\r\n      ? { ...defaultHeader, ...options.headers }\r\n      : defaultHeader;\r\n\r\n    options.body = JSON.stringify(options.body) || false;\r\n\r\n    // if object options in the property body is null, delete that the \"body\"\r\n    if (!options.body) delete options.body;\r\n\r\n    setTimeout(() => controller.abort(), 7000);\r\n\r\n    // Return the promise with the options\r\n    return fetch(endpoint, options)\r\n      .then((res) =>\r\n        res.ok\r\n          ? res.json()\r\n          : Promise.reject({\r\n              err: true,\r\n              status: res.status || '00',\r\n              statusText: res.statusText || 'Ocurred an error',\r\n            })\r\n      )\r\n      .catch((err) => err);\r\n  };\r\n\r\n  // Read\r\n  const get = (url, options = {}) => customFetch(url, options);\r\n\r\n  // Create\r\n  const post = (url, options = {}) => {\r\n    options.method = 'POST';\r\n    return customFetch(url, options);\r\n  };\r\n\r\n  // Update\r\n  const put = (url, options = {}) => {\r\n    options.method = 'PUT';\r\n    return customFetch(url, options);\r\n  };\r\n\r\n  // Delete\r\n  const del = (url, options = {}) => {\r\n    options.method = 'DELETE';\r\n    return customFetch(url, options);\r\n  };\r\n\r\n  return {\r\n    get,\r\n    post,\r\n    put,\r\n    del,\r\n  };\r\n};\r\n","export const types = {\r\n  countryGetAllCountries: '[country] get all countries',\r\n  countryGetCountryByName: '[country] get country by name',\r\n  countryGetCountryByCode: '[country] get country by code',\r\n  countryGetCountryByRegion: '[country] get country by region',\r\n  countryCleanDetails: '[country] clean details',\r\n};\r\n","import { helpHttp } from '../../helpers/helpHttp';\r\nimport { API_URLS } from '../../helpers/ApiUrl';\r\nimport { types } from '../types';\r\n\r\nconst {\r\n  GET_ALL_COUNTRIES,\r\n  GET_COUNTRY_BY_NAME,\r\n  GET_COUNTRIES_BY_REGION,\r\n  GET_COUNTRY_BY_CODE,\r\n} = API_URLS;\r\n\r\n// action for get data for API\r\nexport const startGetAllCountries = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await helpHttp().get(GET_ALL_COUNTRIES);\r\n\r\n      dispatch(countryGetAll(res));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\n// action for put data of api in the reducer and\r\n// put at the store\r\nconst countryGetAll = (data) => ({\r\n  type: types.countryGetAllCountries,\r\n  payload: data,\r\n});\r\n\r\n// action for get data for API when the name is provided\r\nexport const startGetCountryByName = (name) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await helpHttp().get(\r\n        `${GET_COUNTRY_BY_NAME}${name}`\r\n      );\r\n\r\n      console.log(res);\r\n      dispatch(countryGetByName(res));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\n// action \"startGetCountryByName\" for put data of api in the reducer and\r\n// put at the store\r\nconst countryGetByName = (data) => ({\r\n  type: types.countryGetCountryByName,\r\n  payload: data,\r\n});\r\n\r\n// action for get data for API when the code is provided\r\nexport const startGetCountryByCode = (code) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await helpHttp().get(\r\n        `${GET_COUNTRY_BY_CODE}${code}`\r\n      );\r\n\r\n      dispatch(countryGetByCode(res));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\n// action \"startGetCountryByCode\" for put data of api in the reducer and\r\n// put at the store\r\nconst countryGetByCode = (data) => ({\r\n  type: types.countryGetCountryByCode,\r\n  payload: data,\r\n});\r\n\r\n// action to get data as the region is provided and if region if undefine\r\n// the action will call to get all data\r\nexport const startGetCountryByRegion = (region) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      if (!region) {\r\n        return dispatch(startGetAllCountries());\r\n      } else {\r\n        const res = await helpHttp().get(\r\n          `${GET_COUNTRIES_BY_REGION}${region}`\r\n        );\r\n\r\n        dispatch(countryGetByRegion(res));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\n// action \"startGetCountryByRegion\" for put data of api in the reducer and\r\n// put at the store\r\nconst countryGetByRegion = (data) => ({\r\n  type: types.countryGetCountryByRegion,\r\n  payload: data,\r\n});\r\n\r\n//action for clean data when the user leaves the details route\r\nexport const startCleanDetails = () => ({\r\n  type: types.countryCleanDetails,\r\n});\r\n","const GET_ALL_COUNTRIES = 'https://restcountries.eu/rest/v2/all';\r\nconst GET_COUNTRY_BY_NAME =\r\n  'https://restcountries.eu/rest/v2/name/';\r\nconst GET_COUNTRIES_BY_REGION =\r\n  'https://restcountries.eu/rest/v2/region/';\r\n\r\nconst GET_COUNTRY_BY_CODE =\r\n  'https://restcountries.eu/rest/v2/callingcode/';\r\n\r\nexport const API_URLS = {\r\n  GET_ALL_COUNTRIES,\r\n  GET_COUNTRY_BY_NAME,\r\n  GET_COUNTRIES_BY_REGION,\r\n  GET_COUNTRY_BY_CODE,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/loader.4b554ca6.svg\";","import loaderImg from '../../assets/img/loader.svg';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <img\r\n      src={loaderImg}\r\n      alt=\"loader\"\r\n      style={{\r\n        margin: '1rem auto',\r\n        display: 'block',\r\n        width: '8.7rem',\r\n        height: '8.7rem',\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","export const populationFormat = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n","import { populationFormat } from '../../../helpers/populationFormat';\r\n\r\nfunction CardInfo({ population, region, capital }) {\r\n  return (\r\n    <section className=\"country-info\">\r\n      <div className=\"country-info__text\">\r\n        <span className=\"country-info__bold\">Population: </span>\r\n        {populationFormat(population)}\r\n      </div>\r\n      <div className=\"country-info__text\">\r\n        <span className=\"country-info__bold\">Region: </span>\r\n        {region}\r\n      </div>\r\n      <div className=\"country-info__text\">\r\n        <span className=\"country-info__bold\">Capital: </span>\r\n        {capital}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CardInfo;\r\n","function CardImg({ flag, name, handleViewDetails }) {\r\n  return (\r\n    <img\r\n      className=\"country-card__img\"\r\n      src={flag}\r\n      alt={name}\r\n      loading=\"lazy\"\r\n      onClick={handleViewDetails}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CardImg;\r\n","import styled from 'styled-components';\r\n\r\nexport const CountryCardStyled = styled.div`\r\n  .country-card {\r\n    background-color: ${(props) => props.theme.cardColor};\r\n    border-radius: 5px;\r\n    box-shadow: var(--shadow);\r\n    color: ${(props) => props.theme.fontColor};\r\n    margin-bottom: 4rem;\r\n    margin-left: 4rem;\r\n    margin-right: 4rem;\r\n\r\n    @media only screen and (min-width: 1024px) {\r\n      margin-bottom: 0;\r\n      margin-left: 0;\r\n      margin-right: 0;\r\n    }\r\n\r\n    &__img {\r\n      border-top-left-radius: 5px;\r\n      border-top-right-radius: 5px;\r\n      cursor: pointer;\r\n      height: auto;\r\n      width: 100%;\r\n    }\r\n\r\n    &__container {\r\n      padding: 2.8rem 1.7rem;\r\n    }\r\n\r\n    &__title {\r\n      font-size: 2rem;\r\n      letter-spacing: 0.5px;\r\n      margin-bottom: 1.3rem;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n  }\r\n\r\n  .country-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    &__text {\r\n      font-size: 1.65rem;\r\n      padding: 0.6rem;\r\n    }\r\n\r\n    &__bold {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\n/* components */\r\nimport CardInfo from './cardInfor/CardInfo';\r\nimport CardImg from './cardImg/CardImg';\r\nimport { CountryCardStyled } from './CountryCard.styles';\r\n\r\nfunction CountryCard({\r\n  name,\r\n  capital,\r\n  population,\r\n  flag,\r\n  region,\r\n  callingCodes,\r\n}) {\r\n  let history = useHistory();\r\n\r\n  const handleViewDetails = () => {\r\n    history.push(`/details/${callingCodes[0]}`);\r\n  };\r\n\r\n  return (\r\n    <CountryCardStyled>\r\n      <article className=\"country-card\">\r\n        <CardImg\r\n          flag={flag}\r\n          name={name}\r\n          handleViewDetails={handleViewDetails}\r\n        />\r\n\r\n        <div className=\"country-card__container\">\r\n          <h2 className=\"country-card__title\">{name}</h2>\r\n\r\n          <CardInfo\r\n            population={population}\r\n            region={region}\r\n            capital={capital}\r\n          />\r\n        </div>\r\n      </article>\r\n    </CountryCardStyled>\r\n  );\r\n}\r\n\r\nexport default CountryCard;\r\n","import styled from 'styled-components';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startGetAllCountries } from '../../context/actions/country';\r\n\r\n/* components */\r\nimport Loader from '../utils/Loader';\r\nimport CountryCard from '../CountryCard/CountryCard';\r\n\r\nconst CountryListStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 700px) {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    column-gap: 6rem;\r\n    row-gap: 6rem;\r\n  }\r\n`;\r\n\r\nfunction CountryList() {\r\n  const dispatch = useDispatch();\r\n  const { countries } = useSelector(\r\n    (state) => state.countriesData\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(startGetAllCountries());\r\n  }, [dispatch]);\r\n\r\n  if (!countries) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (countries?.err) {\r\n    return (\r\n      <p style={{ textAlign: 'center', fontSize: '2.5rem' }}>\r\n        Can not find result 🤕\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CountryListStyled>\r\n      {countries?.map((country) => (\r\n        <CountryCard key={country.name} {...country} />\r\n      ))}\r\n    </CountryListStyled>\r\n  );\r\n}\r\n\r\nexport default CountryList;\r\n","export default __webpack_public_path__ + \"static/media/darkMode.7fc0173f.svg\";","export default __webpack_public_path__ + \"static/media/lightMode.1ae957f3.svg\";","import styled from 'styled-components';\r\n\r\nexport const HeaderStyled = styled.div`\r\n  .main-header {\r\n    align-items: center;\r\n    box-shadow: var(--shadow);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 1.2rem;\r\n    width: 100%;\r\n\r\n    @media only screen and (min-width: 1024px) {\r\n      margin-bottom: 2.7rem;\r\n      padding: 0.4rem 4rem;\r\n    }\r\n\r\n    background-color: ${(props) => props.theme.cardColor};\r\n\r\n    &__title {\r\n      color: ${(props) => props.theme.fontColor};\r\n      cursor: pointer;\r\n      font-size: 1.8rem;\r\n      letter-spacing: 1px;\r\n\r\n      @media only screen and (min-width: 1024px) {\r\n        font-size: 2.4rem;\r\n      }\r\n    }\r\n\r\n    .main-button {\r\n      align-items: center;\r\n      background-color: transparent;\r\n      border: 0;\r\n      cursor: pointer;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0;\r\n      outline: 0;\r\n      padding: 0;\r\n      text-align: center;\r\n\r\n      &__img {\r\n        margin-right: 9px;\r\n        width: 20px;\r\n      }\r\n      &__text {\r\n        color: ${(props) => props.theme.fontColor};\r\n        font-size: 1.3rem;\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import DarkModeImg from '../../assets/img/darkMode.svg';\r\nimport lightModeImg from '../../assets/img/lightMode.svg';\r\n\r\nimport { HeaderStyled } from './Header.styles';\r\n\r\nfunction Header({ theme, setTheme }) {\r\n  function changeTheme() {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      setTheme('light');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  }\r\n\r\n  const icon = theme === 'light' ? lightModeImg : DarkModeImg;\r\n  const mode = theme === 'light' ? 'Dark Mode' : 'Light Mode';\r\n\r\n  return (\r\n    <>\r\n      <HeaderStyled>\r\n        <header className=\"main-header\">\r\n          <h1 className=\"main-header__title\">\r\n            Where in the world?\r\n          </h1>\r\n\r\n          <button className=\"main-button\" onClick={changeTheme}>\r\n            <img\r\n              src={icon}\r\n              alt=\"\"\r\n              className=\"main-button__img\"\r\n            />\r\n            <span className=\"main-button__text\">{mode}</span>\r\n          </button>\r\n        </header>\r\n      </HeaderStyled>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n\r\nexport default useForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchFormStyled = styled.div`\r\n  .main-form {\r\n    width: 100%;\r\n\r\n    &__search {\r\n      background-color: ${(props) => props.theme.cardColor};\r\n      border-radius: 5px;\r\n      border: 0;\r\n      box-shadow: var(--shadow);\r\n      caret-color: ${(props) => props.theme.fontColor};\r\n      color: ${(props) => props.theme.fontColor};\r\n      font-size: 1.5rem;\r\n      font-weight: 200;\r\n      height: 40px;\r\n      outline: 0;\r\n      padding: 2.4rem 2.5rem;\r\n      width: 100%;\r\n\r\n      @media only screen and (min-width: 1024px) {\r\n        height: 50px;\r\n        width: 50rem;\r\n      }\r\n    }\r\n\r\n    &__search::placeholder {\r\n      color: ${(props) => props.theme.fontColor};\r\n      font-size: 1.5rem;\r\n    }\r\n\r\n    @media only screen and (min-width: 1024px) {\r\n      width: 70%;\r\n    }\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useForm from '../../hooks/useForm';\r\nimport {\r\n  startGetAllCountries,\r\n  startGetCountryByName,\r\n} from '../../context/actions/country';\r\n\r\nimport { SearchFormStyled } from './SearchForm.styles';\r\n\r\nfunction SearchForm() {\r\n  const dispatch = useDispatch();\r\n  const [{ search }, handleInputChange] = useForm({\r\n    search: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    search === '' && dispatch(startGetAllCountries());\r\n  }, [search, dispatch]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(startGetCountryByName(search));\r\n  };\r\n\r\n  return (\r\n    <SearchFormStyled>\r\n      <form className=\"main-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"main-form__search\"\r\n          type=\"search\"\r\n          name=\"search\"\r\n          placeholder=\"🔍 Search for a country...\"\r\n          autoComplete=\"off\"\r\n          value={search}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </SearchFormStyled>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const SelectFormStyled = styled.div`\r\n  .main-select {\r\n    background-color: ${(props) => props.theme.cardColor};\r\n    border-radius: 4px;\r\n    border: 0;\r\n    box-shadow: var(--shadow);\r\n    color: ${(props) => props.theme.fontColor};\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    margin-top: 4rem;\r\n    outline: 0;\r\n    padding: 1.2rem 2rem;\r\n    width: 50%;\r\n\r\n    @media only screen and (min-width: 1024px) {\r\n      margin-top: 0;\r\n      width: auto;\r\n    }\r\n  }\r\n`;\r\n","import useForm from '../../hooks/useForm';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startGetCountryByRegion } from '../../context/actions/country';\r\n\r\n/* components */\r\nimport { SelectFormStyled } from './SelectForm.styles';\r\n\r\nfunction SelectForm() {\r\n  const [{ regions }, handleInputChange] = useForm({\r\n    regions: '',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(startGetCountryByRegion(regions));\r\n  }, [regions, dispatch]);\r\n\r\n  return (\r\n    <SelectFormStyled>\r\n      <select\r\n        className=\"main-select\"\r\n        name=\"regions\"\r\n        onChange={handleInputChange}\r\n      >\r\n        <option className=\"main-select__option\" value=\"\">\r\n          Filter by Region\r\n        </option>\r\n        <option className=\"main-select__option\" value=\"africa\">\r\n          Africa\r\n        </option>\r\n        <option className=\"main-select__option\" value=\"americas\">\r\n          Americas\r\n        </option>\r\n        <option className=\"main-select__option\" value=\"asia\">\r\n          Asia\r\n        </option>\r\n        <option className=\"main-select__option\" value=\"europe\">\r\n          Europe\r\n        </option>\r\n        <option className=\"main-select__option\" value=\"oceania\">\r\n          Oceania\r\n        </option>\r\n      </select>\r\n    </SelectFormStyled>\r\n  );\r\n}\r\n\r\nexport default SelectForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const ScrollTopStyled = styled.div`\r\n  .scroll-top-btn {\r\n    cursor: pointer;\r\n    position: fixed;\r\n    z-index: 999;\r\n    bottom: 1vh;\r\n    right: 1vw;\r\n    width: 4.3rem;\r\n    height: 4.3rem;\r\n    border-radius: 20%;\r\n    background-color: #000000;\r\n    color: white;\r\n    box-shadow: var(--shadow);\r\n    outline: 0;\r\n    border: 0;\r\n    font-size: 2.1rem;\r\n    font-weight: bold;\r\n    transition: all 300ms ease-in-out;\r\n  }\r\n\r\n  .scroll-top-btn:hover {\r\n    color: #515a5a;\r\n    background-color: white;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useWindowScroll } from 'react-use';\r\nimport { ScrollTopStyled } from './ScrollTop.styles';\r\n\r\nfunction ScrollTop() {\r\n  const { y } = useWindowScroll();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (y > 500) {\r\n      setVisible(true);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  }, [y]);\r\n\r\n  const scrollToTop = () =>\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n\r\n  if (!visible) {\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <ScrollTopStyled>\r\n      <button onClick={scrollToTop} className=\"scroll-top-btn\">\r\n        &#11014;\r\n      </button>\r\n    </ScrollTopStyled>\r\n  );\r\n}\r\n\r\nexport default ScrollTop;\r\n","import styled from 'styled-components';\r\n\r\n/* components */\r\nimport SearchForm from '../searchForm/SearchForm';\r\nimport SelectForm from '../selectForm/SelectForm';\r\nimport ScrollTop from '../utils/scrollTop/ScrollTop';\r\n\r\nconst MainSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  padding: 1.7rem 1rem;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-bottom: 5.5rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 350px) {\r\n    padding-bottom: 5rem;\r\n  }\r\n`;\r\n\r\nfunction Section() {\r\n  return (\r\n    <MainSection>\r\n      <ScrollTop />\r\n      <SearchForm />\r\n\r\n      <SelectForm />\r\n    </MainSection>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\nimport CountryList from './CountryList/CountryList';\r\n\r\n/* components */\r\nimport Header from './header/Header';\r\nimport Section from './section/Section';\r\n\r\nexport const MainContainer = styled.main`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: var(--max-width);\r\n`;\r\n\r\nfunction Main({ theme, setTheme }) {\r\n  return (\r\n    <div>\r\n      <Header theme={theme} setTheme={setTheme} />\r\n      <MainContainer>\r\n        <Section />\r\n\r\n        <CountryList />\r\n      </MainContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import styled from 'styled-components';\r\n\r\nexport const CountryDetailsStyled = styled.div`\r\n  .details-card {\r\n    padding: 3rem;\r\n\r\n    @media only screen and (min-width: 1024px) {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    &__img {\r\n      @media only screen and (min-width: 1024px) {\r\n        width: 46%;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .details-info {\r\n    &__name {\r\n      font-size: 2.1rem;\r\n      letter-spacing: 0.4px;\r\n    }\r\n\r\n    &__text {\r\n      font-size: 1.4rem;\r\n    }\r\n\r\n    &__bold {\r\n      font-weight: 600;\r\n    }\r\n\r\n    &__groups {\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      @media only screen and (min-width: 1024px) {\r\n        column-gap: 7rem;\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 200px);\r\n      }\r\n    }\r\n\r\n    &__border {\r\n      margin-top: 2rem;\r\n\r\n      @media only screen and (min-width: 1024px) {\r\n        align-items: center;\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        margin-left: -2.58rem;\r\n      }\r\n\r\n      .border__title {\r\n        font-size: 1.6rem;\r\n        font-weight: 700;\r\n        letter-spacing: 0.2px;\r\n\r\n        @media only screen and (min-width: 1024px) {\r\n          text-align: center;\r\n          font-size: 1.7rem;\r\n        }\r\n      }\r\n\r\n      .border__container {\r\n        align-items: center;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n      }\r\n\r\n      .border__box {\r\n        background-color: ${(props) => props.theme.cardColor};\r\n        border-radius: 3px;\r\n        box-shadow: var(--shadow);\r\n        font-size: 1.2rem;\r\n        padding: 0.8rem 3rem;\r\n        @media only screen and (min-width: 1024px) {\r\n          margin-left: 1.2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { startCleanDetails } from '../../context/actions/country';\r\n\r\nconst BackBtnStyled = styled.div`\r\n  .back-btn {\r\n    background-color: ${(props) => props.theme.cardColor};\r\n    border: 0;\r\n    box-shadow: var(--shadow);\r\n    color: ${(props) => props.theme.fontColor};\r\n    cursor: pointer;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    font-weight: bold;\r\n    margin-bottom: 5rem;\r\n    margin-left: 2.4rem;\r\n    margin-top: 2.4rem;\r\n    padding: 1rem 2rem;\r\n    text-align: left;\r\n    text-decoration: none;\r\n    width: 30%;\r\n\r\n    @media only screen and (min-width: 1024px) {\r\n      margin-bottom: 5rem;\r\n      margin-left: 2.4rem;\r\n      width: 10%;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction BackBtn() {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCleanData = () => {\r\n    dispatch(startCleanDetails());\r\n  };\r\n\r\n  return (\r\n    <BackBtnStyled>\r\n      <button\r\n        className=\"back-btn\"\r\n        onClick={() => {\r\n          history.goBack();\r\n\r\n          handleCleanData();\r\n        }}\r\n      >\r\n        &#8634; Back\r\n      </button>\r\n    </BackBtnStyled>\r\n  );\r\n}\r\n\r\nexport default BackBtn;\r\n","function DetailsImg({ flag, name }) {\r\n  return (\r\n    <img src={flag} alt={name} className=\"details-card__img\" />\r\n  );\r\n}\r\n\r\nexport default DetailsImg;\r\n","function DetailsInfo({ children }) {\r\n  return <section className=\"details-info\">{children}</section>;\r\n}\r\n\r\nexport default DetailsInfo;\r\n","import React from 'react';\r\n\r\nfunction DetailsGroupBorders({ borders }) {\r\n  return (\r\n    <div className=\"details-info__border\">\r\n      <h5 className=\"border__title\">Border Countries:</h5>\r\n\r\n      <div className=\"border__container\">\r\n        <div className=\"border__box\">\r\n          {borders.length > 0 ? borders[0] : '❌'}\r\n        </div>\r\n\r\n        <div className=\"border__box\">\r\n          {borders.length > 0 ? borders[1] : '❌'}\r\n        </div>\r\n\r\n        <div className=\"border__box\">\r\n          {borders.length > 0\r\n            ? borders[2]\r\n              ? borders[2]\r\n              : '❌'\r\n            : '❌'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsGroupBorders;\r\n","import React from 'react';\r\nimport { populationFormat } from '../../../helpers/populationFormat';\r\n\r\nfunction DetailsGroupOne({\r\n  nativeName,\r\n  population,\r\n  region,\r\n  subregion,\r\n  capital,\r\n}) {\r\n  return (\r\n    <div className=\"details-info__group-1\">\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">Native Name: </span>\r\n        {nativeName}\r\n      </p>\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">Population: </span>\r\n        {populationFormat(population)}\r\n      </p>\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">Region: </span>\r\n        {region}\r\n      </p>\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">Sub Region: </span>\r\n        {subregion}\r\n      </p>\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">Capital: </span>\r\n        {capital}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsGroupOne;\r\n","import React from 'react';\r\n\r\nfunction DetailsGroupTwo({\r\n  topLevelDomain,\r\n  currencies,\r\n  languages,\r\n}) {\r\n  return (\r\n    <div className=\"details-info__group-2\">\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">\r\n          Top Level Domain:\r\n        </span>\r\n        {topLevelDomain[0]}\r\n      </p>\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">Currencies: </span>\r\n        {currencies[0].code}\r\n      </p>\r\n      <p className=\"details-info__text\">\r\n        <span className=\"details-info__bold\">Languages: </span>\r\n        {languages[0].name}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsGroupTwo;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { startGetCountryByCode } from '../../context/actions/country';\r\n\r\n/* components */\r\nimport { MainContainer } from '../Main';\r\nimport { CountryDetailsStyled } from './CountryDetails.styles';\r\nimport Loader from '../utils/Loader';\r\nimport BackBtn from '../utils/BackBtn';\r\nimport DetailsImg from './detailsImg/DetailsImg';\r\nimport DetailsInfo from './DetailsInfo';\r\nimport DetailsGroupBorders from './groups/DetailsGroupBorders';\r\nimport DetailsGroupOne from './groups/DetailsGroupOne';\r\nimport DetailsGroupTwo from './groups/DetailsGroupTwo';\r\n\r\nfunction CountryDetails() {\r\n  const dispatch = useDispatch();\r\n  const { details } = useSelector(\r\n    (state) => state.countriesData\r\n  );\r\n\r\n  let { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    const code = pathname.slice(9);\r\n\r\n    dispatch(startGetCountryByCode(code.toString()));\r\n  }, [pathname, dispatch]);\r\n\r\n  if (!details) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const {\r\n    borders,\r\n    flag,\r\n    name,\r\n    nativeName,\r\n    population,\r\n    region,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies,\r\n    languages,\r\n  } = details[0];\r\n\r\n  return (\r\n    <MainContainer>\r\n      <CountryDetailsStyled>\r\n        <BackBtn />\r\n\r\n        <article className=\"details-card\">\r\n          <DetailsImg flag={flag} name={name} />\r\n\r\n          <DetailsInfo>\r\n            <h3 className=\"details-info__name\">{name}</h3>\r\n\r\n            <div className=\"details-info__groups\">\r\n              <DetailsGroupOne\r\n                nativeName={nativeName}\r\n                population={population}\r\n                region={region}\r\n                subregion={subregion}\r\n                capital={capital}\r\n              />\r\n\r\n              <DetailsGroupTwo\r\n                topLevelDomain={topLevelDomain}\r\n                currencies={currencies}\r\n                languages={languages}\r\n              />\r\n            </div>\r\n\r\n            <DetailsGroupBorders borders={borders} />\r\n          </DetailsInfo>\r\n        </article>\r\n      </CountryDetailsStyled>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nexport default CountryDetails;\r\n","import {\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\n/* components */\r\nimport Main from '../components/Main';\r\nimport CountryDetails from '../components/CountryDetails/CountryDetails';\r\n\r\nfunction AppRouter({ theme, setTheme }) {\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              children={\r\n                <Main theme={theme} setTheme={setTheme} />\r\n              }\r\n            />\r\n            <Route\r\n              exact\r\n              path={`/details/:name`}\r\n              component={CountryDetails}\r\n            />\r\n\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import { types } from '../types';\r\n\r\nconst initialState = {\r\n  countries: null,\r\n  details: null,\r\n};\r\n\r\nexport const countryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.countryGetAllCountries:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n      };\r\n\r\n    case types.countryGetCountryByName:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n      };\r\n\r\n    case types.countryGetCountryByRegion:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n      };\r\n\r\n    case types.countryGetCountryByCode:\r\n      return {\r\n        ...state,\r\n        details: action.payload,\r\n      };\r\n\r\n    case types.countryCleanDetails:\r\n      return {\r\n        ...state,\r\n        details: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { countryReducer } from './countryReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const rootReducer = combineReducers({\r\n  countriesData: countryReducer,\r\n});\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  :root {\r\n    --darkBlue: hsl(209, 23%, 22%);\r\n    --veryDarkBlue: hsl(207, 26%, 17%);\r\n    --veryDarkBlueText: hsl(200, 15%, 8%);\r\n    --darkGray: hsl(0, 0%, 52%);\r\n    --veryDarkGray: hsl(0, 0%, 98%);\r\n    --white: hsl(0, 0%, 100%);\r\n\r\n    --font: 'Nunito Sans', sans-serif;\r\n    --max-width: 1200px;\r\n    --shadow: 0 2px 9px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n    font-family: var(--font);\r\n    background-color:  ${(props) => props.theme.mainColor};\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  /* ScrollBar */\r\n\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 9px;\r\n    background: rgba(7, 7, 7, 0.4);\r\n    border: 0;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 2px grey;\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background: rgba(255, 255, 255, 0.9);\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:active {\r\n    background: rgba(131, 137, 138, 0.9);\r\n  }\r\n\r\n`;\r\n","import AppRouter from './router/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './context/store';\nimport { GlobalStyle } from './App.styles';\nimport { ThemeProvider } from 'styled-components';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\n// get selected theme for ls or  put default \"dark\"\nconst lsTheme = localStorage.getItem('theme') || 'dark';\n\nconst LightTheme = {\n  mainColor: ' hsl(0, 0%, 100%)',\n  cardColor: ' hsl(0, 0%, 100%)',\n  fontColor: 'hsl(207, 26%, 17%)',\n};\n\nconst DarkTheme = {\n  cardColor: 'hsl(209, 23%, 22%)',\n  mainColor: 'hsl(207, 26%, 17%)',\n  fontColor: ' hsl(0, 0%, 100%)',\n};\n\nconst themes = {\n  light: LightTheme,\n  dark: DarkTheme,\n};\n\nfunction App() {\n  const [theme, setTheme] = useState('dark'); // light\n\n  useEffect(() => {\n    setTheme(lsTheme);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={themes[theme]}>\n        <GlobalStyle />\n        <AppRouter theme={theme} setTheme={setTheme} />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}